// Bootstrap Button Variant

@mixin button-variant($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;
  @at-root {
    &.active,
    &:active,
    &:focus,
    &:hover,
    .open .dropdown-toggle#{&} {
      color: $color;
      background-color: darken($background, 10%);
      border-color: darken($border, 12%);
    }

    &.active,
    &:active,
    .open .dropdown-toggle#{&} {
      background-image: none;
    }

    &.disabled,
    &[disabled],
    fieldset[disabled] #{&} {
      &,
      &.active,
      &:active,
      &:focus,
      &:hover {
        background-color: $background;
        border-color: $border;
      }
    }
  }

  .badge {
    color: $background;
    background-color: $color;
  }
}

// Background Features

@mixin background-cover {
  -webkit-background-size: cover;
  -moz-background-size: cover;
  background-size: cover;
  -o-background-size: cover;
  // width: 100vw ;
  height: 100vh ;

}

// Font Selections

@mixin serif-font {
  font-family: "Droid Serif", "Helvetica Neue", Helvetica, Arial, sans-serif;
}

@mixin script-font {
  font-family: "Kaushan Script", "Helvetica Neue", Helvetica, Arial, cursive;
}

@mixin body-font {
  font-family: "Roboto Slab", "Helvetica Neue", Helvetica, Arial, sans-serif;
}

@mixin heading-font {
  font-family: "Montserrat", "Helvetica Neue", Helvetica, Arial, sans-serif;
  text-transform: uppercase;
}


/// Mixin to place items on a circle
/// @author Hugo Giraudel
/// @author Ana Tudor
/// @param {Integer} $item-count - Number of items on the circle
/// @param {Length} $circle-size - Large circle size
/// @param {Length} $item-size - Single item size
@mixin on-circle($item-count, $circle-size, $item-size) {
  top: 50% ;
  left: 50% ;
  position: absolute;
  width:  $circle-size;
  height: $circle-size;
  padding: 0;
  border-radius: 50%; 
  list-style: none;       
  
  > * {
    display: block;
    position: absolute;
    top:  50%; 
    left: 50%;
    width:  $item-size;
    height: $item-size;
    margin: -($item-size / 2);
  
    $angle: (360 / $item-count);
    $rot: -90;

    @for $i from 1 through $item-count {
      &:nth-of-type(#{$i}) {
        transform: 
          rotate($rot * 1deg) 
          translate($circle-size / 2) 
          rotate($rot * -1deg);
      }

      $rot: $rot + $angle;
    }
  }
}